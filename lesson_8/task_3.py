# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно,
# пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
# При этом скрипт завершается, сформированный список выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
# только если введено число.
# Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
# При этом работа скрипта не должна завершаться.

class NumExeption(Exception):
    def __init__(self, text):
        self.text = text


def input_list():
    my_list = []
    while True:
        try:
            inp_data = input("Введите число и нажмите Enter: ")

            if inp_data == "stop":
                print(my_list)
                break

            if not inp_data.isdigit():
                raise NumExeption(f"{inp_data} - не является числом")
            else:
                my_list.append(int(inp_data))

        except NumExeption as e:
            print(e)


input_list()
